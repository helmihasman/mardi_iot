script(type='text/javascript', src='/adminlte/plugins/jQuery/jquery-2.2.3.min.js')
script(type='text/javascript', src='https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js')
script(type='text/javascript', src='/adminlte/bootstrap/js/bootstrap.min.js')
script(type='text/javascript', src='/adminlte/plugins/slimScroll/jquery.slimscroll.min.js')
script(type='text/javascript', src='/adminlte/dist/js/app.min.js')
script(type='text/javascript', src='/adminlte/dist/js/demo.js')
script(type='text/javascript', src='/adminlte/plugins/iCheck/icheck.min.js')
script(type='text/javascript', src='/adminlte/plugins/knob/jquery.knob.js')
script(type='text/javascript', src='https://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js')
script(type='text/javascript', src='https://code.jquery.com/ui/1.11.4/jquery-ui.min.js')
script(type='text/javascript', src='/adminlte/plugins/morris/morris.min.js')
script(type='text/javascript', src='/adminlte/plugins/jvectormap/jquery-jvectormap-world-mill-en.js')
script(type='text/javascript', src='/adminlte/plugins/chartjs/Chart.min.js')
script(type='text/javascript', src='/adminlte/chart_dashboard.js')
script(type='text/javascript', src='/adminlte/plugins/fastclick/fastclick.js')
script(type='text/javascript', src='https://unpkg.com/leaflet@1.0.2/dist/leaflet.js')
script(type='text/javascript',src='/socket.io/socket.io.js')
script(type='text/javascript').
  function goBack() {
    window.history.back();
    }
   
    
script(type='text/javascript').
  function dateFormatChange(dates) {
        var d = createDateAsUTC(dates);
        d.setMinutes(d.getMinutes()+480);
        var ddate = d.getDate();
        var dmonth = d.getMonth()+1;
        var dyear = d.getFullYear();
        var dhour = d.getHours();
        var dminutes = d.getMinutes();
        var dseconds = d.getSeconds();

        if(ddate < 10){
            ddate = "0"+ddate;
        }
        if(dmonth < 10){
            dmonth = "0"+dmonth;
        }

        if(dhour < 10){
            dhour = "0"+dhour;
        }
        if(dminutes < 10){
            dminutes = "0"+dminutes;
        }
        if(dseconds < 10){
            dseconds = "0"+dseconds;
        }

        var newdate;
        if(dhour < 12){
            newdate = dyear+"-"+dmonth+"-"+ddate+" "+dhour+":"+dminutes+":"+dseconds+" AM";
        }
        else{
            newdate = dyear+"-"+dmonth+"-"+ddate+" "+dhour+":"+dminutes+":"+dseconds+" PM";
        }
        
        return newdate;
    }
    
script(type='text/javascript',async).
    
    //source => http://codepen.io/zachdunn/pen/VvRXdP
        // Using leaflet.js to pan and zoom a big image.
    // See also: http://kempe.net/blog/2014/06/14/leaflet-pan-zoom-image.html
    // Marker Pin: http://codepen.io/zachdunn/pen/wapEam
    // create the slippy map
    var map = L.map('image-map', {
      minZoom: 1,
      maxZoom: 4,
      center: [0, 0],
      zoom: 1,
      crs: L.CRS.Simple,
      attributionControl: false
    });

    L.control.attribution({
      prefix: false
    }).addAttribution('').addTo(map);
    // House: http://i.imgur.com/cenqiCf.jpg
    // Palace SVG (1280 x 806): https://dl.dropbox.com/s/yhrpnftsuis15z6/Topkapi_Palace_plan.svg
    // dimensions of the image
    var w = 2000 * 2,
    h = 1600 * 2,
    //url = '/adminlte/dist/img/hospital_floor_plan.jpg';
    url = '/uploads/map/icu_smc2.png';

    // calculate the edges of the image, in coordinate space
    var southWest = map.unproject([0, h], map.getMaxZoom() - 1);
    var northEast = map.unproject([w, 0], map.getMaxZoom() - 1);
    var bounds = new L.LatLngBounds(southWest, northEast);

    // add the image overlay, 
    // so that it covers the entire map
    L.imageOverlay(url, bounds).addTo(map);

    // tell leaflet that the map is exactly as big as the image
    map.setMaxBounds(bounds);

    // pixel coords
    var m = {
        x: 500,
        y: 500
      };
      
      var n = {
        x: 7500,
        y: 1400
      };
      
      //Add marker
    
    //map.on('click', addMarker);
    var addedOne = false,
      checkpoint = L.divIcon({
        className: 'checkpoint-pin',
        html: '<img src="/adminlte/dist/img/wifi.png" data-toggle="modal" data-target="#myModal">',
        iconSize: [30, 30],
        iconAnchor: [18, 30]
      });
      
      
      var table = false,
      playerTable = L.divIcon({
        className: 'checkpoint-pin',
        html: '<img src="/adminlte/dist/img/wifi.png" data-toggle="modal" data-target="#myModal2">',
        iconSize: [30, 30],
        iconAnchor: [18, 30]
      });
      
      var cabinet1 = false,
      cabinetCard1 = L.divIcon({
        className: 'cabinet-pin',
        //html: '<img src="images/cabinet1_icon.png" data-toggle="modal" data-target="#myModal">',
        iconSize: [30, 30],
        iconAnchor: [18, 30]
      });
      
      var cabinet2 = false,
      cabinetCard2= L.divIcon({
        className: 'cabinet-pin',
        //html: '<img src="images/cabinet2_icon.png" data-toggle="modal" data-target="#myModal">',
        iconSize: [30, 30],
        iconAnchor: [18, 30]
      });

    function addMarker(e) {
      // Add marker to map at click location; add popup window
      if (userOne) {
        return;
      }

      var newMarker = new L.marker(e.latlng, {
        icon: userPin
      }).addTo(map);
      newMarker.bindPopup("<b>New Room</b><br>Adventures await");
      userOne = true;
    }
    // Lookup neighbors https://github.com/mapbox/leaflet-knn

    var chekpointMark = L.marker(map.unproject([m.x, m.y], map.getMaxZoom()), {
      icon: checkpoint
    }).addTo(map);
    
     var chekpointMark2 = L.marker(map.unproject([n.x, n.y], map.getMaxZoom()), {
      icon: playerTable
    }).addTo(map);
        
       
         