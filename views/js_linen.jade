script(type='text/javascript', src='/adminlte/plugins/jQuery/jquery-2.2.3.min.js')
script(type='text/javascript', src='https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js')
script(type='text/javascript', src='/adminlte/bootstrap/js/bootstrap.min.js')
script(type='text/javascript', src='/adminlte/plugins/slimScroll/jquery.slimscroll.min.js')
script(type='text/javascript', src='/adminlte/dist/js/app.min.js')
script(type='text/javascript', src='/adminlte/dist/js/demo.js')
script(type='text/javascript', src='/adminlte/plugins/iCheck/icheck.min.js')
script(type='text/javascript', src='/adminlte/plugins/knob/jquery.knob.js')
script(type='text/javascript', src='https://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js')
script(type='text/javascript', src='https://code.jquery.com/ui/1.11.4/jquery-ui.min.js')
script(type='text/javascript', src='/adminlte/plugins/morris/morris.min.js')
script(type='text/javascript', src='/adminlte/plugins/jvectormap/jquery-jvectormap-world-mill-en.js')
script(type='text/javascript', src='/adminlte/plugins/chartjs/Chart.min.js')
script(type='text/javascript', src='/adminlte/plugins/fastclick/fastclick.js')
script(type='text/javascript', src='https://unpkg.com/leaflet@1.0.2/dist/leaflet.js')
script(type='text/javascript', src='/adminlte/dist/js/exporting.js')
script(type='text/javascript', src='/adminlte/dist/js/highcharts.js')
script(type='text/javascript',src='/socket.io/socket.io.js')
script(type='text/javascript').
  function goBack() {
    window.history.back();
    }
  
script.
    var dd,dd2;
    var data = document.getElementById("graph_data").value;
    var data2 = document.getElementById("graph_data17").value;
    //alert(data);
    if(data!=='undefined'){
    dd = JSON.parse(data);
    dd2 = JSON.parse(data2);
    //alert(JSON.stringify(dd));
    //alert(dd.length+" record(s) found");
    }
    
    var clean17_1=0,clean17_2=0,clean17_3=0,clean17_4=0,clean17_5=0;
    var soil17_1=0,soil17_2=0,soil17_3=0,soil17_4=0,soil17_5=0;
    var pending17_1=0,pending17_2=0,pending17_3=0,pending17_4=0,pending17_5=0;
            
    var clean_1=0,clean_2=0,clean_3=0,clean_4=0,clean_5=0,clean_6=0,clean_7=0,clean_8=0,clean_9=0,clean_10=0,clean_11=0,clean_12=0;
    var clean_13=0,clean_14=0,clean_15=0,clean_16=0,clean_17=0,clean_18=0,clean_19=0,clean_20=0,clean_21=0,clean_22=0,clean_23=0,clean_24=0;
    var clean_25=0,clean_26=0,clean_27=0,clean_28=0,clean_29=0,clean_30=0,clean_31=0,clean_32=0,clean_33=0,clean_34=0,clean_35=0,clean_36=0;
    var clean_37=0,clean_38=0,clean_39=0,clean_40=0,clean_41=0,clean_42=0,clean_43=0,clean_44=0,clean_45=0,clean_46=0,clean_47=0,clean_48=0;
    var clean_49=0,clean_50=0,clean_51=0,clean_52=0,clean_53=0,clean_54=0,clean_55=0,clean_56=0,clean_57=0,clean_58=0,clean_59=0,clean_60=0,clean_61=0,clean_62=0;
    
    var soil_1=0,soil_2=0,soil_3=0,soil_4=0,soil_5=0,soil_6=0,soil_7=0,soil_8=0,soil_9=0,soil_10=0,soil_11=0,soil_12=0;
    var soil_13=0,soil_14=0,soil_15=0,soil_16=0,soil_17=0,soil_18=0,soil_19=0,soil_20=0,soil_21=0,soil_22=0,soil_23=0,soil_24=0;
    var soil_25=0,soil_26=0,soil_27=0,soil_28=0,soil_29=0,soil_30=0,soil_31=0,soil_32=0,soil_33=0,soil_34=0,soil_35=0,soil_36=0;
    var soil_37=0,soil_38=0,soil_39=0,soil_40=0,soil_41=0,soil_42=0,soil_43=0,soil_44=0,soil_45=0,soil_46=0,soil_47=0,soil_48=0;
    var soil_49=0,soil_50=0,soil_51=0,soil_52=0,soil_53=0,soil_54=0,soil_55=0,soil_56=0,soil_57=0,soil_58=0,soil_59=0,soil_60=0,soil_61=0,soil_62=0;
    
    var pending_1=0,pending_2=0,pending_3=0,pending_4=0,pending_5=0,pending_6=0,pending_7=0,pending_8=0,pending_9=0,pending_10=0,pending_11=0,pending_12=0;
    var pending_13=0,pending_14=0,pending_15=0,pending_16=0,pending_17=0,pending_18=0,pending_19=0,pending_20=0,pending_21=0,pending_22=0,pending_23=0,pending_24=0;
    var pending_25=0,pending_26=0,pending_27=0,pending_28=0,pending_29=0,pending_30=0,pending_31=0,pending_32=0,pending_33=0,pending_34=0,pending_35=0,pending_36=0;
    var pending_37=0,pending_38=0,pending_39=0,pending_40=0,pending_41=0,pending_42=0,pending_43=0,pending_44=0,pending_45=0,pending_46=0,pending_47=0,pending_48=0;
    var pending_49=0,pending_50=0,pending_51=0,pending_52=0,pending_53=0,pending_54=0,pending_55=0,pending_56=0,pending_57=0,pending_58=0,pending_59=0,pending_60=0,pending_61=0,pending_62=0;
    
    for(var k=0;k<dd2.length;k++){
        if(dd2[k].period === 49){
               clean17_1 = dd2[k].clean;
               soil17_1 = dd2[k].soil;
               pending17_1 = dd2[k].clean - dd[k].soil;
           }
        else if(dd2[k].period === 50){
               clean17_2 = dd2[k].clean;
               soil17_2 = dd2[k].soil;
               pending17_2 = dd2[k].clean - dd[k].soil;
           }
        else if(dd2[k].period === 51){
               clean17_3 = dd2[k].clean;
               soil17_3 = dd2[k].soil;
               pending17_3 = dd2[k].clean - dd[k].soil;
           }
        else if(dd2[k].period === 52){
               clean17_4 = dd2[k].clean;
               soil17_4 = dd2[k].soil;
               pending17_4 = dd2[k].clean - dd[k].soil;
           }
        else if(dd2[k].period === 53){
               clean17_5 = dd2[k].clean;
               soil17_5 = dd2[k].soil;
               pending17_5 = dd2[k].clean - dd[k].soil;
           }
    }
    
    
    for(var i=0;i<dd.length;i++){
           if(dd[i].month === 1 && dd[i].week === 0){
               clean_1 = dd[i].clean;
               soil_1 = dd[i].soil;
               pending_1 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 1 && dd[i].week === 1 ){
               clean_2 = dd[i].clean;
               soil_2 = dd[i].soil;
               pending_2 = dd[i].clean - dd[i].soil;
               
           }
           else if(dd[i].month === 1 && dd[i].week === 2){
               clean_3 = dd[i].clean;
               soil_3 = dd[i].soil;
               pending_3 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 1 && dd[i].week === 3){
               clean_4 = dd[i].clean;
               soil_4 = dd[i].soil;
               pending_4 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 1 && dd[i].week === 4){
               clean_5 = dd[i].clean;
               soil_5 = dd[i].soil;
               pending_5 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 2 && dd[i].week === 4){
               clean_6 = dd[i].clean;
               soil_6 = dd[i].soil;
               pending_6 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 2 && dd[i].week === 5){
               clean_7 = dd[i].clean;
               soil_7 = dd[i].soil;
               pending_7 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 2 && dd[i].week === 6){
               clean_8 = dd[i].clean;
               soil_8 = dd[i].soil;
               pending_8 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 2 && dd[i].week === 7){
               clean_9 = dd[i].clean;
               soil_9 = dd[i].soil;
               pending_9 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 2 && dd[i].week === 8){
               clean_10 = dd[i].clean;
               soil_10 = dd[i].soil;
               pending_10 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 3 && dd[i].week === 8){
               clean_11 = dd[i].clean;
               soil_11 = dd[i].soil;
               pending_11 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 3 && dd[i].week === 9){
               clean_12 = dd[i].clean;
               soil_12 = dd[i].soil;
               pending_12 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 3 && dd[i].week === 10){
               clean_13 = dd[i].clean;
               soil_13 = dd[i].soil;
               pending_13 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 3 && dd[i].week === 11){
               clean_14 = dd[i].clean;
               soil_14 = dd[i].soil;
               pending_14 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 3 && dd[i].week === 12){
               clean_15 = dd[i].clean;
               soil_15 = dd[i].soil;
               pending_15 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 4 && dd[i].week === 13){
               clean_16 = dd[i].clean;
               soil_16 = dd[i].soil;
               pending_16 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 4 && dd[i].week === 14){
               clean_17 = dd[i].clean;
               soil_17 = dd[i].soil;
               pending_17 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 4 && dd[i].week === 15){
               clean_18 = dd[i].clean;
               soil_18 = dd[i].soil;
               pending_18 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 4 && dd[i].week === 16){
               clean_19 = dd[i].clean;
               soil_19 = dd[i].soil;
               pending_19 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 4 && dd[i].week === 17){
               clean_20 = dd[i].clean;
               soil_20 = dd[i].soil;
               pending_20 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 5 && dd[i].week === 17){
               clean_21 = dd[i].clean;
               soil_21 = dd[i].soil;
               pending_21 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 5 && dd[i].week === 18){
               clean_22 = dd[i].clean;
               soil_22 = dd[i].soil;
               pending_22 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 5 && dd[i].week === 19){
               clean_23 = dd[i].clean;
               soil_23 = dd[i].soil;
               pending_23 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 5 && dd[i].week === 20){
               clean_24 = dd[i].clean;
               soil_24 = dd[i].soil;
               pending_24 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 5 && dd[i].week === 21){
               clean_25 = dd[i].clean;
               soil_25 = dd[i].soil;
               pending_25 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 6 && dd[i].week === 21){
               clean_26 = dd[i].clean;
               soil_26 = dd[i].soil;
               pending_26 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 6 && dd[i].week === 22){
               clean_27 = dd[i].clean;
               soil_27 = dd[i].soil;
               pending_27 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 6 && dd[i].week === 23){
               clean_28 = dd[i].clean;
               soil_28 = dd[i].soil;
               pending_28 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 6 && dd[i].week === 24){
               clean_29 = dd[i].clean;
               soil_29 = dd[i].soil;
               pending_29 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 6 && dd[i].week === 25){
               clean_30 = dd[i].clean;
               soil_30 = dd[i].soil;
               pending_30 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 7 && dd[i].week === 26){
               clean_31 = dd[i].clean;
               soil_31 = dd[i].soil;
               pending_31 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 7 && dd[i].week === 27){
               clean_32 = dd[i].clean;
               soil_32 = dd[i].soil;
               pending_32 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 7 && dd[i].week === 28){
               clean_33 = dd[i].clean;
               soil_33 = dd[i].soil;
               pending_33 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 7 && dd[i].week === 29){
               clean_34 = dd[i].clean;
               soil_34 = dd[i].soil;
               pending_34 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 7 && dd[i].week === 30){
               clean_35 = dd[i].clean;
               soil_35 = dd[i].soil;
               pending_35 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 8 && dd[i].week === 30){
               clean_36 = dd[i].clean;
               soil_36 = dd[i].soil;
               pending_36 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 8 && dd[i].week === 31){
               clean_37 = dd[i].clean;
               soil_37 = dd[i].soil;
               pending_37 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 8 && dd[i].week === 32){
               clean_38 = dd[i].clean;
               soil_38 = dd[i].soil;
               pending_38 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 8 && dd[i].week === 33){
               clean_39 = dd[i].clean;
               soil_39 = dd[i].soil;
               pending_39 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 8 && dd[i].week === 34){
               clean_40 = dd[i].clean;
               soil_40 = dd[i].soil;
               pending_40 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 9 && dd[i].week === 34){
               clean_41 = dd[i].clean;
               soil_41 = dd[i].soil;
               pending_41 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 9 && dd[i].week === 35){
               clean_42 = dd[i].clean;
               soil_42 = dd[i].soil;
               pending_42 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 9 && dd[i].week === 36){
               clean_43 = dd[i].clean;
               soil_43 = dd[i].soil;
               pending_43 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 9 && dd[i].week === 37){
               clean_44 = dd[i].clean;
               soil_44 = dd[i].soil;
               pending_44 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 9 && dd[i].week === 38){
               clean_45 = dd[i].clean;
               soil_45 = dd[i].soil;
               pending_45 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 9 && dd[i].week === 39){
               clean_46 = dd[i].clean;
               soil_46 = dd[i].soil;
               pending_46 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 10 && dd[i].week === 39){
               clean_47 = dd[i].clean;
               soil_47 = dd[i].soil;
               pending_47 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 10 && dd[i].week === 40){
               clean_48 = dd[i].clean;
               soil_48 = dd[i].soil;
               pending_48 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 10 && dd[i].week === 41){
               clean_49 = dd[i].clean;
               soil_49 = dd[i].soil;
               pending_49 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 10 && dd[i].week === 42){
               clean_50 = dd[i].clean;
               soil_50 = dd[i].soil;
               pending_50 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 10 && dd[i].week === 43){
               clean_51 = dd[i].clean;
               soil_51 = dd[i].soil;
               pending_51 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 11 && dd[i].week === 43){
               clean_52 = dd[i].clean;
               soil_52 = dd[i].soil;
               pending_52 = dd[i].clean - dd[i].soil;
           }
           
           else if(dd[i].month === 11 && dd[i].week === 44){
               clean_53 = dd[i].clean;
               soil_53 = dd[i].soil;
               pending_53 = dd[i].clean - dd[i].soil;
           }
           
           else if(dd[i].month === 11 && dd[i].week === 45){
               clean_54 = dd[i].clean;
               soil_54 = dd[i].soil;
               pending_54 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 11 && dd[i].week === 46){
               clean_55 = dd[i].clean;
               soil_55 = dd[i].soil;
               pending_55 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 11 && dd[i].week === 47){
               clean_56 = dd[i].clean;
               soil_56 = dd[i].soil;
               pending_56 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 12 && dd[i].week === 47){
               clean_57 = dd[i].clean;
               soil_57 = dd[i].soil;
               pending_57 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 12 && dd[i].week === 48){
               clean_58 = dd[i].clean;
               soil_58 = dd[i].soil;
               pending_58 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 12 && dd[i].week === 49){
               clean_59 = dd[i].clean;
               soil_59 = dd[i].soil;
               pending_59 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 12 && dd[i].week === 50){
               clean_60 = dd[i].clean;
               soil_60 = dd[i].soil;
               pending_60 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 12 && dd[i].week === 51){
               clean_61 = dd[i].clean;
               soil_61 = dd[i].soil;
               pending_61 = dd[i].clean - dd[i].soil;
           }
           else if(dd[i].month === 12 && dd[i].week === 52){
               clean_62 = dd[i].clean;
               soil_62 = dd[i].soil;
               pending_62 = dd[i].clean - dd[i].soil;
           }
           
       }
    
    Highcharts.chart('container', {
    legend: {
        enabled: false
    },

    chart: {
        type: 'column'
    },

    title: {
        text: 'Linen Scanned'
    },

    xAxis: {
        categories: ['Dec(2017)','Jan', 'Feb', 'Mac', 'Apr', 'May','June','July','Aug','Sept','Oct','Nov','Dec']
    },

    yAxis: {
        allowDecimals: false,
        title: {
            text: 'Total Amount'
        }
    },

    tooltip: {
        formatter: function () {
            return '<b>' + this.x + '</b><br/>' +
                this.series.name + ': ' + this.y + '<br/>' +
                'Total: ' + this.point.stackTotal;
        }
    },

    plotOptions: {
                series: {
                    stacking: 'normal'
                }
            },

    series: [
        {
        name: 'Week 6-Clean',
        data: [0,0, 0, 0, 0, 0,0,0,0,clean_46,0,0,clean_62],
        stack: 'Cleanlinen',
        color:'#c2eafc'
        },
        {
        name: 'Week 5-Clean',
        data: [clean17_5,clean_5, clean_10, clean_15, clean_20, clean_25,clean_30,clean_35,clean_40,clean_45,clean_51,clean_56,clean_61],
        stack: 'Cleanlinen',
        color:'#c2eafc'
        },{
        name: 'Week 4-Clean',
        data: [clean17_4,clean_4, clean_9, clean_14, clean_19, clean_24,clean_29,clean_34,clean_39,clean_44,clean_50,clean_55,clean_60],
        stack: 'Cleanlinen',
        color:'#B3E5FC'
        },
        {
        name: 'Week 3-Clean',
        data: [clean17_3,clean_3, clean_8, clean_13, clean_18, clean_23,clean_28,clean_33,clean_38,clean_43,clean_49,clean_54,clean_59],
        stack: 'Cleanlinen',
        color:'#81D4FA'
    },
    {
        name: 'Week 2-Clean',
        data: [clean17_2,clean_2, clean_7, clean_12, clean_17, clean_22,clean_27,clean_32,clean_37,clean_42,clean_48,clean_53,clean_58],
        stack: 'Cleanlinen',
         color:'#29B6F6'
    }, {
        name: 'Week 1-Clean',
        data: [clean17_1,clean_1, clean_6, clean_11, clean_16,clean_21,clean_26,clean_31,clean_36,clean_41,clean_47,clean_52,clean_57],
        stack: 'Cleanlinen',
        color:'#039BE5'
    },
    {
        name: 'Week 6-Soil',
        data: [0,0, 0, 0, 0, 0,0,0,0,soil_46,0,0,soil_62],
        stack: 'Soillinen',
        color:'#ffd7db'
    },
    {
        name: 'Week 5-Soil',
        data: [soil17_5,soil_5, soil_10, soil_15, soil_20, soil_25,soil_30,soil_35,soil_40,soil_45,soil_51,soil_56,soil_61],
        stack: 'Soillinen',
         color:'#ffd7db'
    },{
        name: 'Week 4-Soil',
        data: [soil17_4,soil_4, soil_9, soil_14, soil_19, soil_24,soil_29,soil_34,soil_39,soil_44,soil_50,soil_55,soil_60],
        stack: 'Soillinen',
         color:'#ffcdd2'
    }, {
        name: 'Week 3-Soil',
        data: [soil17_3,soil_3, soil_8, soil_13, soil_18, soil_23,soil_28,soil_33,soil_38,soil_43,soil_49,soil_54,soil_59],
        stack: 'Soillinen',
         color:'#ef9a9a'
    }, {
        name: 'Week 2-Soil',
        data: [soil17_2,soil_2, soil_7, soil_12, soil_17, soil_22,soil_27,soil_32,soil_37,soil_42,soil_48,soil_53,soil_58],
        stack: 'Soillinen',
         color:'#ef5350'
    }, {
        name: 'Week 1-Soil',
        data: [soil17_1,soil_1, soil_6, soil_11, soil_16,soil_21,soil_26,soil_31,soil_36,soil_41,soil_47,soil_52,soil_57],
        stack: 'Soillinen',
        color:'#e53935'
    },
    {
        name: 'Week 6-Pending',
        data: [0,0, 0, 0, 0, 0,0,0,0,pending_46,0,0,pending_62],
        stack: 'pending',
        color:'#ffe6c1'
    },
    {
        name: 'Week 5-Pending',
        data: [pending17_5,pending_5, pending_10, pending_15, pending_20, pending_25,pending_30,pending_35,pending_40,pending_45,pending_51,pending_56,pending_61],
        stack: 'pending',
        color:'#ffe6c1'
    },{
        name: 'Week 4-Pending',
        data: [pending17_4,pending_4, pending_9, pending_14, pending_19, pending_24,pending_29,pending_34,pending_39,pending_44,pending_50,pending_55,pending_60],
        stack: 'pending',
        color:'#FFE0B2'
    }, {
        name: 'Week 3-Pending',
        data:[pending17_3,pending_3, pending_8, pending_13, pending_18, pending_23,pending_28,pending_33,pending_38,pending_43,pending_49,pending_54,pending_59],
        stack: 'pending',
        color:'#FFCC80'
    },{
        name: 'Week 2-Pending',
        data: [pending17_2,pending_2, pending_7, pending_12, pending_17, pending_22,pending_27,pending_32,pending_37,pending_42,pending_48,pending_53,pending_58],
        stack: 'pending',
        color:'#FFA726'
    }, {
        name: 'Week 1-Pending',
        data: [pending17_1,pending_1, pending_6, pending_11, pending_16,pending_21,pending_26,pending_31,pending_36,pending_41,pending_47,pending_52,pending_57],
        stack: 'pending',
        color:'#FB8C00'
    }]
    });
    
script(type='text/javascript').
    function formatDate(date){

                 var getnewdate = date.getDate();
                 var getmonth = date.getMonth()+1;
                 var gethours = date.getHours();
                 var getminutes = date.getMinutes();
                 var getseconds = date.getSeconds();
                 var newdate,newmonth,newhours,newminutes,newseconds;

                 if(getnewdate < 10){
                     newdate = "0"+getnewdate;
                 }
                 else{
                     newdate = getnewdate;
                 }

                 if(getmonth < 10){
                     newmonth = "0"+(getmonth);
                 }
                 else{
                     newmonth = (getmonth);
                 }

                 if(gethours < 10){
                     newhours = "0"+gethours;
                 }
                 else{
                     newhours = gethours;
                 }

                 if(getminutes < 10){
                     newminutes = "0"+getminutes;
                 }
                 else{
                     newminutes = getminutes;
                 }

                 if(getseconds < 10){
                     newseconds = "0"+getseconds;
                 }
                 else{
                     newseconds = getseconds;
                 }
               var datetime = newdate + "-"
                    + newmonth  + "-" 
                    + date.getFullYear();

            return datetime;
    }    
    
script(type='text/javascript').
      $(function () {
        var dd;
        var data = document.getElementById("graph_data").value;
        //alert(data);
        if(data!=='undefined'){
        dd = JSON.parse(data);
        //alert(dd);
        //alert(dd.length+" record(s) found");
        }
        
        var date1,date2,date3,date4,date5,date6,date7,date8;
        
        var date8_new = new Date(dd[0].year_s+"-"+dd[0].month_s+"-"+dd[0].day_s);
        date8 = formatDate(date8_new);
        
        var date7_new = new Date(date8_new.getTime());
        date7_new.setDate(date8_new.getDate() - 1);
        date7 = formatDate(date7_new);
        
        var date6_new = new Date(date7_new.getTime());
        date6_new.setDate(date7_new.getDate() - 1);
        date6 = formatDate(date6_new);
        
        var date5_new = new Date(date6_new.getTime());
        date5_new.setDate(date6_new.getDate() - 1);
        date5 = formatDate(date5_new);
        
        var date4_new = new Date(date5_new.getTime());
        date4_new.setDate(date5_new.getDate() - 1);
        date4 = formatDate(date4_new);
        
        var date3_new = new Date(date4_new.getTime());
        date3_new.setDate(date4_new.getDate() - 1);
        date3 = formatDate(date3_new);
        
        var date2_new = new Date(date3_new.getTime());
        date2_new.setDate(date3_new.getDate() - 1);
        date2 = formatDate(date2_new);
        
        var date1_new = new Date(date2_new.getTime());
        date1_new.setDate(date2_new.getDate() - 1);
        date1 = formatDate(date1_new);
        
        var clean1=0,clean2=0,clean3=0,clean4=0,clean5=0,clean6=0,clean7=0;
        var soil1=0,soil2=0,soil3=0,soil4=0,soil5=0,soil6=0,soil7=0;
        
       
       
       for(var i=0;i<dd.length;i++){
           var datenew = new Date(dd[i].year_s+"-"+dd[i].month_s+"-"+dd[i].day_s);
           var nowdate =  formatDate(datenew);
           
           if(nowdate === date8){
               clean1 = dd[i].clean;
               soil1 = dd[i].soil;
           }
           if(nowdate === date7){
               clean2 = dd[i].clean;
               soil2 = dd[i].soil;
           }
           if(nowdate === date6){
               clean3 = dd[i].clean;
               soil3 = dd[i].soil;
           }
           if(nowdate === date5){
               clean4 = dd[i].clean;
               soil4 = dd[i].soil;
           }
           if(nowdate === date4){
               clean5 = dd[i].clean;
               soil5 = dd[i].soil;
           }
           if(nowdate === date3){
               clean6 = dd[i].clean;
               soil6 = dd[i].soil;
           }
           if(nowdate === date2){
               clean7 = dd[i].clean;
               soil7 = dd[i].soil;
           }

       }
        /* ChartJS
         * -------
         * Here we will create a few charts using ChartJS
         */

        //--------------
        //- AREA CHART -
        //--------------

        // Get context with jQuery - using jQuery's .get() method.
        //var areaChartCanvas = $("#areaChart").get(0).getContext("2d");
        // This will get the first returned node in the jQuery collection.
        //var areaChart = new Chart(areaChartCanvas);
        
        var barChartCanvas = $("#areaChart").get(0).getContext("2d");
        var barChart = new Chart(barChartCanvas);
        

        var areaChartData = {
          labels: [date2, date3, date4, date5, date6, date7, date8],
          datasets: [
            {
              label: "Clean",
              fillColor: "rgba(60,141,188,0.9)",
              strokeColor: "rgba(60,141,188,0.8)",
              pointColor: "#3b8bba",
              pointStrokeColor: "rgba(60,141,188,1)",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(60,141,188,1)",
              data: [clean7, clean6, clean5, clean4, clean3, clean2, clean1]
            },
            {
              label: "Soiled",
              fillColor: "rgba(231,76,60,0.9)",
              strokeColor: "rgba(231,76,60,0.8)",
              pointColor: "#e74c3c",
              pointStrokeColor: "rgba(231,76,60,1)",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(231,76,60,1)",
              data: [soil7, soil6, soil5, soil4, soil3, soil2, soil1]
            }
          ]
        };
        
        var barChartOptions = {
        //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
        scaleBeginAtZero: true,
        //Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines: true,
        //String - Colour of the grid lines
        scaleGridLineColor: "rgba(0,0,0,.05)",
        //Number - Width of the grid lines
        scaleGridLineWidth: 1,
        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,
        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines: true,
        //Boolean - If there is a stroke on each bar
        barShowStroke: true,
        //Number - Pixel width of the bar stroke
        barStrokeWidth: 2,
        //Number - Spacing between each of the X value sets
        barValueSpacing: 5,
        //Number - Spacing between data sets within X values
        barDatasetSpacing: 1,
        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].fillColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
        //Boolean - whether to make the chart responsive
        responsive: true,
        maintainAspectRatio: true
        };

        barChartOptions.datasetFill = false;
        barChart.Bar(areaChartData, barChartOptions);

        /*var areaChartOptions = {
          //Boolean - If we should show the scale at all
          showScale: true,
          //Boolean - Whether grid lines are shown across the chart
          scaleShowGridLines: false,
          //String - Colour of the grid lines
          scaleGridLineColor: "rgba(0,0,0,.05)",
          //Number - Width of the grid lines
          scaleGridLineWidth: 1,
          //Boolean - Whether to show horizontal lines (except X axis)
          scaleShowHorizontalLines: true,
          //Boolean - Whether to show vertical lines (except Y axis)
          scaleShowVerticalLines: true,
          //Boolean - Whether the line is curved between points
          bezierCurve: true,
          //Number - Tension of the bezier curve between points
          bezierCurveTension: 0.3,
          //Boolean - Whether to show a dot for each point
          pointDot: false,
          //Number - Radius of each point dot in pixels
          pointDotRadius: 4,
          //Number - Pixel width of point dot stroke
          pointDotStrokeWidth: 1,
          //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
          pointHitDetectionRadius: 20,
          //Boolean - Whether to show a stroke for datasets
          datasetStroke: true,
          //Number - Pixel width of dataset stroke
          datasetStrokeWidth: 2,
          //Boolean - Whether to fill the dataset with a color
          datasetFill: true,
          //String - A legend template
          legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
          //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
          maintainAspectRatio: true,
          //Boolean - whether to make the chart responsive to window resizing
          responsive: true
        };

        //Create the line chart
        barChart.Line(areaChartData, areaChartOptions);*/

        
      });
